services:
  finance_db:
    image: postgres:15-alpine
    container_name: finance-db
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASS}"
      - "POSTGRES_DB=${DB_NAME}"
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - ./finance-db/:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  django_app:
    build:
      context: finance
    stop_signal: SIGKILL
    container_name: api
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      finance_db:
        condition: service_healthy
    networks:
      - app_network

  finance_bot:
    container_name: finance_bot
    build:
      context: finance_bot
    environment:
      - "BOT_TOKEN=${TOKEN}"
    env_file:
      - ./.env
    ports:
      - "446:446"
    restart: always
    depends_on:
      - django_app
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
