from collections import defaultdict
from typing import List, Dict

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

ACTIONS: Dict[str, str] = {
    "account_name": "–ò–º—è —Å—á–µ—Ç–∞",
    "amount_gte": "–°—É–º–º–∞ –æ—Ç",
    "amount_lte": "–°—É–º–º–∞ –¥–æ",
    "category_name": "–ò–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    "create_at_after": "–î–∞—Ç–∞ –±–æ–ª—å—à–µ",
    "create_at_before": "–î–∞—Ç–∞ –º–µ–Ω—å—à–µ"
}
user_choices: Dict[int, dict] = defaultdict(dict)


async def get_action_options(
        user_id: int, action: str
) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –∏ —á–∞—Å–æ–≤.

    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å
                –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    keyboard: List[List[InlineKeyboardButton]] = [[]]
    for action in ACTIONS:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
        button_text = f"{ACTIONS[action]}    [‚úò] " if action not in user_choices[user_id] \
            else f"{ACTIONS[action]}    [‚úîÔ∏è]"
        keyboard.append(
            [
                InlineKeyboardButton(
                    text=button_text, callback_data=f"toggle-{action}")
            ]
        )

    keyboard.append([
        InlineKeyboardButton(text="üÜó", callback_data="finish"),
        InlineKeyboardButton(text="üîô", callback_data=action)
    ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
